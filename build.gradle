buildscript {

    ext {
        springBootVersion = '2.1.3.RELEASE'
    }

    repositories {
        mavenLocal()        //使用本地仓库
        mavenCentral()      //使用中央仓库
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

//apply from: 'gradle.properties'

// 所有模块都采用统一的版本号以及groupName
subprojects {

    apply plugin: 'java'    //添加 Java 插件, 表明这是一个 Java 项目
    apply plugin: 'idea'    //添加 Eclipse 插件, 添加 Eclipse IDE 支持, Intellij Idea 为 "idea"
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    group 'com.chang'
    version '0.0.1-SNAPSHOT'

    sourceCompatibility = 1.8   //最低兼容版本
    targetCompatibility = 1.8   //目标兼容版本

    ext {
        springBootVersion = '2.1.3.RELEASE'
        junitVersion = '4.11'
    }

    // java编译的时候缺省状态下会因为中文字符而失败
    [compileJava, compileTestJava, javadoc]*.options*.encoding = 'UTF-8'

    repositories {
        mavenLocal()        //使用本地仓库
        mavenCentral()
        maven { url "http://repo.spring.io/snapshot" }
        maven { url "http://repo.spring.io/milestone" }
        maven { url 'http://maven.springframework.org/release' }
        maven { url 'http://maven.springframework.org/milestone' }
        jcenter()
    }

    jar {
        manifest {
            attributes("Implementation-Title": "Gradle")
        }
    }

    // All sub-modules add the following dependencies
    dependencies {
        compile("org.projectlombok:lombok:1.18.8")
        annotationProcessor 'org.projectlombok:lombok:1.18.8'
//
        implementation("org.springframework.boot:spring-boot-starter")

        // 测试依赖
        testCompile "org.springframework.boot:spring-boot-starter-test"
        testCompile("junit:junit:${junitVersion}")
    }
}


