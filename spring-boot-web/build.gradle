apply plugin: 'org.springframework.boot'
apply plugin: 'groovy'
apply plugin: 'idea'

dependencies {
    // 依赖项
    api project(':common')
    //spring boot
    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation "org.springframework.cloud:spring-cloud-starter-openfeign"
    implementation "org.springframework.boot:spring-boot-starter-actuator"

    implementation "org.springframework.boot:spring-boot-starter-thymeleaf"

    implementation "org.springframework.boot:spring-boot-starter-data-jpa"
    implementation 'mysql:mysql-connector-java'

    testImplementation 'org.powermock:powermock-module-junit4:2.0.7'
    testImplementation 'org.powermock:powermock-api-mockito2:2.0.7'

    runtime('com.h2database:h2')

    // junit
    testImplementation("org.springframework.boot:spring-boot-starter-test") {
        exclude group: 'junit', module: 'junit'
    }
    testImplementation "org.junit.jupiter:junit-jupiter-api"
    testImplementation "org.junit.jupiter:junit-jupiter-params"
    testImplementation "org.junit.jupiter:junit-jupiter-engine"
    testImplementation "org.testcontainers:testcontainers"
    testImplementation "org.testcontainers:junit-jupiter"
    testImplementation "org.testcontainers:mysql"
    testImplementation "org.flywaydb:flyway-core"

    // spock
    // mandatory dependencies for using Spock
    testImplementation "org.codehaus.groovy:groovy"
    testImplementation "org.spockframework:spock-core"
    testImplementation "org.spockframework:spock-spring" // for spring

    // optional dependencies for using Spock
    testCompile "org.hamcrest:hamcrest-core:1.3" // only necessary if Hamcrest matchers are used
    testRuntime "net.bytebuddy:byte-buddy:1.9.3"          // allows mocking of classes (in addition to interfaces)
    testRuntime "org.objenesis:objenesis:2.6"    // allows mocking of classes without default constructor (together with CGLIB)
    testImplementation "org.testcontainers:spock"

}

// 通过JUnit平台激活测试执行 spock必须
test {
    useJUnitPlatform()
    testLogging {
        events "passed", "failed", "passed"
    }
}
